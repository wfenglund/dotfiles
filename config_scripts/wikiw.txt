:::i3_from_scratch:::
sudo pacman -S xorg xorg-init i3-vm i3status i3blocks
cp /etc/X11/xinit/xinitrc ~/.xinitrc
vim .xinitrc # replace last line with "exec i3"
Could also be done with .xprofile

:::fix_keyboard_layout:::
setxkbmap se

:::mount_unmount_usb_device:::
sudo mount /dev/sda1 /mnt/usb
cd /mnt/usb/
*do stuff*
cd
sudo umount /dev/sda1

:::fix_if_R_packages_break:::
Perform the following steps:

($ sudo pacman -S gcc-fortran)
$ pamac remove rstudio-desktop
$ sudo pacman -Rdd r
$ rm -r R/
$ sudo pacman -S r
$ pamac build rstudio-desktop

open rstudio-bin

in rstudio:
install.packages("BiocManager")
BiocManager::install("taxize")
BiocManager::install("reticulate")
BiocManager::install("dada2")
BiocManager::install("edgeR")
BiocManager::install("knitr")
BiocManager::install("gtools")
BiocManager::install("readxl")
BiocManager::install("forcats")
BiocManager::install("wesanderson")
BiocManager::install("...") # and so on

If all else fails:
$ sudo chmod -R 777 /usr/lib/R/

if XML does not work:
$ mv anaconda3/ anaconda3-bak/
BiocManager::install("XML")
$ mv anaconda3-bak/ anaconda3/

:::open_a_tty_tty3:::
open tty3:
ctrl + alt + f3

f1 and f2 will open tty1 and tty2 etc.

There are 6 teletypewriters accessible in total.

:::fix_when_multiqc_and_cutadapt_breaks_after_update:::
pip install multiqc --break-system-packages # sudo?
pip install cutadapt --break-system-packages

:::subset_a_vcf_using_vcftools:::
First create a file with sample names:
$ bcftools query -l file.vcf.gz > subset_list.txt

Edit subset_list.txt and remove any samples that are not to be included, and run:
$ vcftools --gzvcf ./file.vcf.gz --keep subset_list.txt --remove-indels --max-missing 0.95 --minQ 30 --recode --stdout | gzip -c > subset_file.vcf.gz

:::print_vcf_sample_list_vcftools:::
$ bcftools query -l file.vcf.gz > subset_list.txt

:::weird_unresponsive_i3_and_super_key:::
Try:
$ mv ~/dotfiles ~/dotfiles_bk
$ reboot # also rename dotfiles again to original depending on result

Try:
super + caps + enter # last time this worked and made regular super + enter work

:::bash_if_length_elif_file_exists:::
var1="string"
if [ ${#var1} > 7 ] # if string is longer than 7 characters
then
  # if code block
elif [ -f /path/to/file ] # if file exists
then
  # elif code block
else
  # else code block
fi

:::bash_arithmetic_operations_addition:::
$ var1=5
$ echo $((var1 + 2))

:::make_blast_database_and_perform_local_blast:::
# create local blast database:
$ makeblastdb -in fasta_file.fa -parse_seqids -dbtype nucl -out blast_database_name
# perform local blast (edit max_target_seqs, num_threads and output format if needed):
$ blastn -query ./seqs_to_be_identidied.fa -db ./blast_database_name -out ./blast_results.out -outfmt "6 qseqid sseqid sstart send evalue pident sscinames" -max_target_seqs 10 -num_threads 20

:::retrieve_blast_hit_sequence_from_database:::
# run the following (sseqid, sstart and send are a possible outputs from blastn local blast):
blastdbcmd -db ./blast_database_name -entry [sseqid] -range [sstart]-[send]

:::git_commit_earlier_date:::
# In case code changes were made that should logically be placed at an earlier (or later) date, do the following (replace GIT_COMMITTER_DATE and message):
$ GIT_AUTHOR_DATE="2099-09-09 09:09" GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE git commit -m "commit message"

:::awk_set_delimiter_file_separator:::
awk 'BEGIN{FS=";"};{print}'
